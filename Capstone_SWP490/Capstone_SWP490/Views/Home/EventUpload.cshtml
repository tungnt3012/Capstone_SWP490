@model Capstone_SWP490.Models.events_ViewModel.eventsMainCreateViewModel
@{
    ViewBag.Title = "Event|Upload";
}

<style>
    #menu_Schedule {
        color: #ffffff !important;
        background: #30cf6b;
    }

    .file {
        visibility: hidden;
        position: absolute;
    }
</style>
<script src="https://cdn.ckeditor.com/4.18.0/standard-all/ckeditor.js"></script>
<div class="container-fluid xyz">
    <div class="col-lg-12" id="content_area2_header">
        <div class="col-lg-12" id="content_area2_title">
            <label for="exampleInputTitle">Event Upload</label>
        </div>
    </div>
    <div class="main">
        <div class="column">
            <div class="col-lg-10 col-lg-offset-1" id="under">
                @using (Html.BeginForm("EventUpload", "Home"))
                {
                    <div class="form-group">
                        <label class="front-size-title" for="Event_Schedule">
                            Add Main Event
                        </label>
                    </div>
                    <div class="column">
                        <div class="form-group">
                            <h5 style="color:red"> @ViewData["error"] </h5>
                            <h5 style="color:green"> @ViewData["success"] </h5>
                        </div>
                        @*<div class="form-group">
                                <label for="type-event">Choose a Type of Event:</label>
                                <div class="row">
                                    <div class="col-lg-3">
                                        @Html.DropDownListFor(m => m.event_type, new List<SelectListItem>
                                          { new SelectListItem{Text="Event", Value="1"},
                                            new SelectListItem{Text="Activities", Value="2"}})
                                    </div>
                                </div>
                            </div>*@
                        <div class="form-group">
                            <label for="Title">Title<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.title, new { @class = "form-control", id = "EventTitle", name = "Title", value = "", placeholder = "Title", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Desciption">Description<span id="not-empty">*</span></label>
                            @Html.TextAreaFor(m => m.desctiption, new { @class = "form-control", id = "EventDesctiption", name = "Desctiption", value = "", placeholder = "Description of the event", required = "required" })
                        </div>
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label for="Location">Start date<span id="not-empty">*</span></label>
                                    <div class="row">
                                        <div class="col-lg-12">
                                            @Html.TextBoxFor(m => m.start_date, new { type = "date", @class = "form-control", id = "EventStartDate", name = "EventStartDate", placeholder = "Start date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Location">Location<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.venue, new { @class = "form-control", id = "EventLocation", name = "TiLocationtle", value = "", placeholder = "Location", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="ContactorPhone">Contactor phone<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.contactor_phone, new { @class = "form-control", type = "number", id = "EventContactorPhone", @onchange = "checkPhone()", name = "Contactor phone", value = "", placeholder = "Contactor phone", required = "required" })
                            <span style="color:red"><i id="text-error-phone"></i></span>
                        </div>
                        <div class="form-group">
                            <label for="ContactorEmail">Contactor email<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.contactor_email, new { @class = "form-control", type = "email", id = "EventContactorEmail", @onchange = "checkEmail()", name = "EventContactor email", value = "", placeholder = "Contactor email", required = "required" })
                            <span style="color:red"><i id="text-error-email"></i></span>
                        </div>
                        <div class="form-group">
                            <label for="ContactorName">Contactor name<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.contactor_name, new { @class = "form-control", id = "EventContactorName", name = "EventContactorName", value = "", placeholder = "Contactor name", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Fanpage">Fanpage<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.fan_page, new { @class = "form-control", id = "EventFanpage", name = "EventFanpage", value = "", placeholder = "Fanpage", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Fanpage">Note</label>
                            @Html.TextBoxFor(m => m.note, new { @class = "form-control", id = "EventNote", name = "EventNote", value = "", placeholder = "Note" })
                        </div>
                        <div class="form-group">
                            <label class="front-size-title" for="Event_Schedule">
                            </label>
                        </div>
                        <div class="form-group">
                            <label class="front-size-title" for="Event_Schedule">
                                Add Sub-Event
                            </label>
                        </div>
                        <div class="form-group">
                            <label for="Title">Sub-Event title<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.title, new { @class = "form-control", id = "SubEventTitle", name = "SubTitle", value = "", placeholder = "Sub event title", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Desciption">Sub-Event description<span id="not-empty">*</span></label>
                            @Html.TextAreaFor(m => m.subEvent.desctiption, new { @class = "form-control", id = "SubEventDesctiption", name = "SubDesctiption", value = "", placeholder = "Sub event description of the event", required = "required" })
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="Location">Start time<span id="not-empty">*</span></label>
                                    <div class="row">
                                        @*<div class="col-lg-6">
                                                @Html.TextBoxFor(m => m.subEvent.start_date, new { type = "date", @class = "form-control", id = "SubEventStartDate", @onchange = "checkDate()", name = "SubEventStartDate", placeholder = "Start date" })
                                            </div>*@
                                        <div class="col-lg-6">
                                            @Html.TextBoxFor(m => m.subEvent.start_time, new { type = "time", @class = "form-control", id = "SubEventStartTime", @onchange = "checkTime()", name = "SubEventStartTime", placeholder = "Start Time" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="Location">End time<span id="not-empty">*</span></label>
                                    <div class="row">
                                        @*<div class="col-lg-6">
                                                @Html.TextBoxFor(m => m.subEvent.end_date, new { type = "date", @class = "form-control", id = "SubEventEndDate", @onchange = "checkDate()", name = "SubEventEndDate", placeholder = "End date" })
                                            </div>*@
                                        <div class="col-lg-6">
                                            @Html.TextBoxFor(m => m.subEvent.end_time, new { type = "time", @class = "form-control", id = "SubEventEndTime", @onchange = "checkTime()", name = "SubEventEndTime", placeholder = "End Time" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <span style="color:red"><i id="text-error-date"></i></span>
                                <br />
                                <span style="color:red"><i id="text-error-time"></i></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Location">Sub-Event location<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.venue, new { @class = "form-control", id = "SubEventLocation", name = "SubTiLocationtle", value = "", placeholder = "Sub event location", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="ContactorPhone">Sub-Event contactor phone<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.contactor_phone, new { @class = "form-control", type = "number", id = "SubEventContactorPhone", @onchange = "checkPhone()", name = "SubContactorPhone", value = "", placeholder = "Sub event contactor phone", required = "required" })
                            <span style="color:red"><i id="text-error-phone"></i></span>
                        </div>
                        <div class="form-group">
                            <label for="ContactorEmail">Sub-Event contactor email<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.contactor_email, new { @class = "form-control", type = "email", id = "SubEventContactorEmail", @onchange = "checkEmail()", name = "SubEventContactorEmail", value = "", placeholder = "Sub event contactor email", required = "required" })
                            <span style="color:red"><i id="text-error-email"></i></span>
                        </div>
                        <div class="form-group">
                            <label for="ContactorName">Sub-Event contactor name<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.contactor_name, new { @class = "form-control", id = "SubEventContactorName", name = "SubEventContactorName", value = "", placeholder = "Sub event contactor name", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Fanpage">Sub-Event fanpage<span id="not-empty">*</span></label>
                            @Html.TextBoxFor(m => m.subEvent.fan_page, new { @class = "form-control", id = "SubEventFanpage", name = "SubEventFanpage", value = "", placeholder = "Sub event fanpage", required = "required" })
                        </div>
                        <div class="form-group">
                            <label for="Fanpage">Sub-Event note</label>
                            @Html.TextBoxFor(m => m.subEvent.note, new { @class = "form-control", id = "SubEventNote", name = "SubEventNote", value = "", placeholder = "Sub event note" })
                        </div>
                        <div class="form-group">
                            <label for="type-event">Allow member join this Sub-Event:</label>
                            <div class="row">
                                <div class="col-lg-3">
                                    @Html.DropDownListFor(m => m.subEvent.status, new List<SelectListItem>
                                      { new SelectListItem{Text="Not Allow Join", Value="0"},
                                        new SelectListItem{Text="Allow Member Join", Value="1"},
                                        new SelectListItem{Text="Allow Coach Join", Value="2"},
                                        new SelectListItem{Text="Allow Member & Coach Join", Value="3"}}, new { @class = "form-control", id = "SubStatusSelect" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="pull-right">
                                <button type="button" class="btn btn-secondary" onclick="location.href='/Home/Event'; return false;" id="event-canner">Cancel</button>

                                <button type="submit" class="btn btn-primary" id="event-upload">Add</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="validate-time" value="0">
<input type="hidden" id="st" value="@ViewData["status"]">
<input type="hidden" id="event_id" value=@ViewData["event_id"]>
<script>
    $(document).ready(function () {
        var statusTemp = $("#st").val();
        if (statusTemp === "1") {
            var _eventId = $("#event_id").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SendNotiEvent", "Home")',
                data: JSON.stringify({ 'eventId': _eventId }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (rs) {
                    if (rs != null) {
                        var s = rs;
                        if (rs.Data == true) {
                            console.log("Add Event Successfully!!!");
                        } else {
                            console.log("Add Event Fail!!!");
                        }
                    }
                }
            });
        }
    });

    function checkDate() {
        var _startDateMainEvent = $('#EventStartDate').val()+' 00:00:01';
        var _endDateMainEvent = $('#EventStartDate').val()+' 23:59:59';
        var _startDateSubEvent = $('#EventStartDate').val();
        var _endDateSubEvent = $('#EventStartDate').val();

        var _startSubTime = $('#SubEventStartTime').val();
        var _endSubTime = $('#SubEventEndTime').val();

        if (_startSubTime === '' || _endSubTime === '') {
            $('#event-upload').attr("disabled", true);
            $('#text-error-date').html("Time Not Null!!!");
        } else {
            _startDateSubEvent += ' ' + _startSubTime;
            _endDateSubEvent += ' ' + _endSubTime;

            if (_startDateSubEvent >= _startDateMainEvent && _endDateSubEvent <= _endDateMainEvent) {
                $('#validate-time').val("1");
                $('#text-error-date').html("");
            } else {
                $('#validate-time').val("0");
                $('#text-error-date').html("The Start Date must be >= Main Event Start Date:  " + _startDateMainEvent + " </br> AND The End Date must be <= Main Event End Date:  " + _endDateMainEvent + " !!!");
            }

            if (_startDateSubEvent <= _endDateSubEvent) {
                $('#validate-time').val("1");
                $('#text-error-time').html("");
            } else {
                $('#validate-time').val("0");
                $('#text-error-time').html("The End Date must NOT occur before the Start Date!!!");
            }
        }

        var _validTime = $('#validate-time').val();
        if (_validTime === '0') {
            $('#event-upload').attr("disabled", true);
        } else if (_validTime === '1') {
            $('#event-upload').attr("disabled", false);
        }
    }

    function checkTime() {
        checkDate();
        //var _startDate = $('#EventStartDate').val();
        //var _endDate = $('#EventEndDate').val();

        //var _startTime = $('#EventStartTime').val();
        //var _endTime = $('#EventEndTime').val();
        //if (_startDate == _endDate) {
        //    if (_startTime == _endTime || _startTime > _endTime) {
        //        $('#event-upload').attr("disabled", true);
        //        $('#text-error-date').html("The End Time must be after the Start Time!!!");
        //    } else {
        //        $('#event-upload').attr("disabled", false);
        //        $('#text-error-date').html("");
        //    }
        //}
    }

    //function checkEmail() {
    //    var _email = $('#EventContactorEmail').val();
    //    if (!isEmail(_email)) {
    //        $('#event-upload').attr("disabled", true);
    //        $('#text-error-email').html("The Email form must be abc@mail.com!!!");
    //    } else {
    //        $('#event-upload').attr("disabled", false);
    //        $('#text-error-email').html("");
    //    }
    //}

    //function checkPhone() {
    //    var _phone = $('#EventContactorPhone').val();
    //    if (!isPhone(_phone)) {
    //        $('#event-upload').attr("disabled", true);
    //        $('#text-error-phone').html("The Phone form has Start from 0 or 84!!!");
    //    } else {
    //        $('#event-upload').attr("disabled", false);
    //        $('#text-error-phone').html("");
    //    }
    //}

    //function isPhone(phone) {
    //    var regex = /([03+[2-9]|05+[6|8|9]|07+[0|6|7|8|9]|08+[1-9]|09+[1-4|6-9]]){3})+[0-9]{7}\b/g;
    //    return regex.test(phone);
    //}


    //function isEmail(email) {
    //    var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
    //    return regex.test(email);
    //}

    $(document).on("click", ".browse", function () {
        var file = $(this).parents().find(".file");
        file.trigger("click");
    });
    $('input[type="file"]').change(function (e) {
        var fileName = e.target.files[0].name;
        $("#file").val(fileName);

        var reader = new FileReader();
        reader.onload = function (e) {
            // get loaded data and render thumbnail.
            document.getElementById("preview").src = e.target.result;
        };
        // read the image file as a data URL.
        reader.readAsDataURL(this.files[0]);
    });

</script>
<script>
    CKEDITOR.replace('editor1', {
        removeButtons: 'PasteFromWord'
    });
</script>
<script>
    document.getElementById('EventTitle').onkeyup = function () {
        var EventTitle = $("#EventTitle").val();
        if (EventTitle.length >= 1) {
            document.getElementById("EventTitle").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventTitle").style.borderColor = "red";
        }
    }

    document.getElementById('EventDesctiption').onkeyup = function () {
        var EventDesctiption = $("#EventDesctiption").val();
        if (EventDesctiption.length >= 1) {
            document.getElementById("EventDesctiption").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventDesctiption").style.borderColor = "red";
        }
    }

    document.getElementById('EventLocation').onkeyup = function () {
        var EventLocation = $("#EventLocation").val();
        if (EventLocation.length >= 1) {
            document.getElementById("EventLocation").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventLocation").style.borderColor = "red";
        }
    }
    document.getElementById('EventContactorPhone').onkeyup = function () {
        var EventContactorPhone = $("#EventContactorPhone").val();
        if (EventContactorPhone.length >= 1) {
            document.getElementById("EventContactorPhone").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventContactorPhone").style.borderColor = "red";
        }
    }
    document.getElementById('EventContactorEmail').onkeyup = function () {
        var EventContactorEmail = $("#EventContactorEmail").val();
        if (EventContactorEmail.length >= 1) {
            document.getElementById("EventContactorEmail").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventContactorEmail").style.borderColor = "red";
        }
    }
    document.getElementById('EventContactorName').onkeyup = function () {
        var EventContactorName = $("#EventContactorName").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("EventContactorName").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventContactorName").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventTitle').onkeyup = function () {
        var EventContactorName = $("#SubEventTitle").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventTitle").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventTitle").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventDesctiption').onkeyup = function () {
        var EventContactorName = $("#SubEventDesctiption").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventDesctiption").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventDesctiption").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventLocation').onkeyup = function () {
        var EventContactorName = $("#SubEventLocation").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventLocation").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventLocation").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventContactorPhone').onkeyup = function () {
        var EventContactorName = $("#SubEventContactorPhone").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventContactorPhone").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventContactorPhone").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventContactorEmail').onkeyup = function () {
        var EventContactorName = $("#SubEventContactorEmail").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventContactorEmail").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventContactorEmail").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventContactorName').onkeyup = function () {
        var EventContactorName = $("#SubEventContactorName").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventContactorName").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventContactorName").style.borderColor = "red";
        }
    }
    document.getElementById('SubEventFanpage').onkeyup = function () {
        var EventContactorName = $("#SubEventFanpage").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("SubEventFanpage").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("SubEventFanpage").style.borderColor = "red";
        }
    }
    document.getElementById('EventFanpage').onkeyup = function () {
        var EventContactorName = $("#EventFanpage").val();
        if (EventContactorName.length >= 1) {
            document.getElementById("EventFanpage").style.borderColor = "#66afe9";
        }
        else {
            document.getElementById("EventFanpage").style.borderColor = "red";
        }
    }
</script>