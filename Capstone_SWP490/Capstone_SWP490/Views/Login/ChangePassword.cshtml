@model Capstone_SWP490.Models.app_userViewModel.app_userViewModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_SigninLayout.cshtml";
}
<div id="wrapper-home">
    <div class="back">
        <div class="div-center-chang">
            <div class="content">

                @using (Html.BeginForm("ChangePassword", "Login"))
                {
                    <div class="form-group">
                        <label for="exampleInputUserLogin" id="homeUserChangPassword">Change Password</label>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputUserLogin" id="homeUserChangPasswordSub">Please choose a new password 12</label>
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(x => x.psw, new { @class = "form-control", id = "exampleInputLoginUser", placeholder = "Password" })
                        <span id="message1" style="color:red"> </span> <br><br>
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(x => x.psw, new { @class = "form-control", id = "exampleInputLoginPassword", placeholder = "Re-enter Password" })
                        <span id="message2" style="color:red"> </span> <br><br>
                    </div>
                    <div class="form-group">
                        <p style="color:red">
                            @ViewData["ChangePasswordError"]
                        </p>
                        <p style="color:green">
                            @ViewData["ChangePasswordSuccess"]
                        </p>
                    </div>
                    @*<div class="form-group">
                            <div id="message">
                                <h3>Password must contain the following:</h3>
                                <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
                                <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
                                <p id="number" class="invalid">A <b>number</b></p>
                                <p id="length" class="invalid">Minimum <b>8 characters</b></p>
                                <p id="footerText" class="invalid">Filler text</p>
                            </div>
                        </div>*@
                    <div class="form-group">
                        <button onclick="validateForm()" validateForm()" type="submit" class="btn btn-primary" id="btnHomeLogin">Login</button>
                    </div>
                    <div class="form-group">
                        @*<button type="submit" class="btn btn-primary" id="btnHomeLogin"><a href="/Home/RegisShirtSizing" class="button">CHANGE PASSWORD</a></button>*@
                        @Html.ActionLink("ViewHome", "Index", "Home")
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script>
function validateForm() {
    //collect form data in JavaScript variables
    var pw1 = document.getElementById("exampleInputLoginUser").value;
    var pw2 = document.getElementById("exampleInputLoginPassword").value;
    //check empty password field
    if(pw1 == "") {
      document.getElementById("message1").innerHTML = "**Fill the password please!";
      return false;
    }

    //check empty confirm password field
    if(pw2 == "") {
      document.getElementById("message2").innerHTML = "**Enter the password please!";
      return false;
    }

    //minimum password length validation

    //maximum length of password validation
    if(pw1.length > 6) {
      document.getElementById("message1").innerHTML = "**Password length must not exceed 6 characters";
      return false;
    }

    if(pw1 != pw2) {
      document.getElementById("message2").innerHTML = "**Passwords are not same";
      return false;
    } else {
        alert("Your password created successfully");
    }
 }
</script>